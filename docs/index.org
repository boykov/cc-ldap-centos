#+TITLE: Аутентификация пользователей CentOS 5/6 с использованием OpenLDAP 2.3/2.4
#+OPTIONS: toc:4 H:6 num:t html-postamble:nil ^:nil tags:nil author:nil
#+SETUPFILE: theme-readtheorg-local.setup
#+HTML_HEAD: <style type="text/css">.org-src-name{ text-align: right; }</style>
#+HTML_HEAD: <style type="text/css">.outline-2{ margin-top: 60px; }</style>
#+MACRO: fa @@html:&nbsp;<sup><i class="fa fa-$1"></i></sup>@@
# #+BIBLIOGRAPHY: /home/eab/git/lit/ldap.bib plain option:-d
# #+HTML_HEAD: <style type="text/css">#content{ text-align: justify; }</style>
# #+HTML_HEAD: <style type="text/css">#content{ -moz-hyphens: auto;-webkit-hyphens: auto;-ms-hyphens: auto; }</style>

* Введение
:PROPERTIES:
:CUSTOM_ID: intro
:UNNUMBERED: t
:ID:       be7bb1b4-d8e8-4b5f-8aa3-754d148fa6ba
:END:

В процессе написания использовались материалы:

| English version                                                                                                       | Русская версия                          |
|-----------------------------------------------------------------------------------------------------------------------+-----------------------------------------|
| [[http://www.openldap.org/doc/admin24/][OpenLDAP Software 2.4 Administrator's Guide]]                                                                           | [[http://pro-ldap.ru/tr/admin24/index.html][Руководство администратора OpenLDAP 2.4]] |
| [[http://www.openldap.org/doc/admin23/][OpenLDAP Software 2.3 Administrator's Guide]]                                                                           |                                         |
| [[http://www.zytrax.com/books/ldap/][LDAP for Rocket Scientists]]                                                                                            | [[http://pro-ldap.ru/tr/zytrax/][LDAP для ученых-ракетчиков]]              |
| [[http://itdavid.blogspot.ru/2012/05/howto-centos-6.html][HOWTO : CentOS 6.2 OpenLDAP 2.4 Setup ]]                                                                                | [[http://pro-ldap.ru/books/openldap-ubuntu-in-practice/][OpenLDAP и Ubuntu на практике]]           |
| [[https://www.packtpub.com/networking-and-servers/mastering-openldap-configuring-securing-and-integrating-directory-services][Matt Butcher. *Mastering OpenLDAP: Configuring, Securing and Integrating Directory Services*. Packt Publishing, 2007.]] |                                         |
| [[http://shop.oreilly.com/product/9781565924918.do][Gerald Carter. LDAP system administration. O'Reilly Media, 2003.]]                                                      |                                         |
| [[http://www.linux-pam.org/Linux-PAM-html/Linux-PAM_SAG.html][The Linux-PAM System Administrators' Guide]]                                                                            |                                         |
# | [[cite:butcher2007mastering]]                   |                                         |

Конфигурация используемых на нашем демо-стенде контейнеров:

| Роль                      | Имя хоста    | ОС             | Конфигурация хоста                                          |
|---------------------------+--------------+----------------+-------------------------------------------------------------|
| *Docker Engine*           | kairos       | *Ubuntu 14.04* | *Docker 1.12.5*                                             |
|---------------------------+--------------+----------------+-------------------------------------------------------------|
| *Служба каталогов*        | server-ldif5 | *CentOS 5*     | *OpenLDAP 2.3* server, *ldif*; *phpLDAPadmin 1.2.3*, custom |
| *Служба каталогов*        | server-ldif6 | *CentOS 6*     | *OpenLDAP 2.4* server, *ldif*; *phpLDAPadmin 1.2.3*, custom |
| *Служба каталогов*        | server-conf5 | *CentOS 5*     | *OpenLDAP 2.3* server, *conf*; *phpLDAPadmin 1.2.3*, custom |
| *Служба каталогов*        | server-conf6 | *CentOS 6*     | *OpenLDAP 2.4* server, *conf*; *phpLDAPadmin 1.2.3*, custom |
| *Клиент службы каталогов* | client5      | *CentOS 5*     | *OpenLDAP 2.3* client                                       |
| *Клиент службы каталогов* | client6      | *CentOS 6*     | *OpenLDAP 2.4* client                                       |
| *Клиент службы каталогов* | gui          | *Debian 8*     | *phpLDAPadmin 1.2.3*, custom                                |

#+begin_note
Команды и конфигурационные файлы прошли проверку на работоспособность
в тестовом программном окружении, доступном в проекте
cc-ldap-centos[fn::https://github.com/boykov/cc-ldap-centos].
#+end_note

* Установка и настройка сервера OpenLDAP
:PROPERTIES:
:CUSTOM_ID: install-and-config
:ID:       f3a148ae-26f4-4c54-a25c-532d2b9086ba
:END:

#+begin_quote
Необходимо разработать документацию по установке и настройке сервера LDAP в ОС *CentOS 5*. Предпочтение отдавать реализациям, доступным в базовом репозитории дистрибутива. Проверить работоспособность выработанных инструкций в ОС *CentOS 6*.
#+end_quote

# Процедура [[convert][конвертации]]

** Установка OpenLDAP
:PROPERTIES:
:CUSTOM_ID: install-openldap
:ID:       cdb77a09-a1eb-4db8-ad05-e45c3b49418c
:END:

#+begin_verse
Где работаем: контейнеры *server-.....*
#+end_verse

Базовые репозитории дистрибутивов *CentOS 5* и *CentOS 6* содержат
*2.3* и *2.4* версию *OpenLDAP*, соответственно. Выполнив стандартную
установку

#+begin_src sh :exports results :results org
cat ../ldap-server/Dockerfile6 | grep openldap-servers | sed "s| \\&\\& \\\||g"
cat ../ldap-server/Dockerfile6 | grep php-ldap | sed "s|RUN |    |g"
#+end_src
#+caption: Установка сервера *OpenLDAP* для *5/2.3* и *6/2.4*
#+RESULTS:
#+BEGIN_SRC org
    yum -y install openldap openldap-servers openldap-clients sudo
    yum -y install php php-ldap wget
#+END_SRC

#+begin_src sh :exports none :results org
cat ../ldap-server/Dockerfile5 | grep overlays | sed "s| \\&\\& \\\||g"
cat ../ldap-server/Dockerfile5 | grep fedora | sed "s|RUN |    |g"
cat ../ldap-server/Dockerfile5 | grep "rpm -i" | sed "s|RUN |    |g"
#+end_src

#+caption: Установка дополнительных пакетов для *5/2.3*
#+BEGIN_SRC org
    yum -y install openldap-servers-overlays
    wget http://dl.fedoraproject.org/pub/epel/5/i386/phpldapadmin-1.2.3-1.el5.noarch.rpm
    rpm -i phpldapadmin-1.2.3-1.el5.noarch.rpm
#+END_SRC

#+begin_src sh :exports none :results org
cat ../ldap-server/Dockerfile6 | grep fedora | sed "s|RUN |    |g"
cat ../ldap-server/Dockerfile6 | grep "rpm -i" | sed "s|RUN |    |g"
#+end_src

#+caption: Установка дополнительных пакетов для *6/2.4*
#+BEGIN_SRC org
    wget http://dl.fedoraproject.org/pub/epel/6/i386/phpldapadmin-1.2.3-2.el6.noarch.rpm
    rpm -i phpldapadmin-1.2.3-2.el6.noarch.rpm
#+END_SRC



получаем две конфигурации, различающиеся в некоторых
деталях. Например, название сервиса: *ldap* в случае *CentOS 5/2.3
OpenLDAP* (*5/2.3*) и *slapd* в случае *CentOS 6/2.4 OpenLDAP*
(*6/2.4*).

#+name: run-prefix
#+begin_src sh :exports none

set -e

if [ ! -f /data/lib/ldap/DB_CONFIG ]; then
    if [ -z "$LDAP_ROOT_PASSWORD" -o -z "$LDAP_MANAGER_PASSWORD" ]; then
	echo "Need LDAP_ROOT_PASSWORD and LDAP_MANAGER_PASSWORD"
	exit
    fi

    sed -i "s|$servers->setValue('login','attr','uid');|// $servers->setValue('login','attr','uid');|g" /etc/phpldapadmin/config.php
    sed -i "s|  Allow from 127.0.0.1|  Allow from 127.0.0.1 172.17.0.1|g" /etc/httpd/conf.d/phpldapadmin.conf
#+end_src

** Добавление файлов конфигурации базы данных HDB
:PROPERTIES:
:CUSTOM_ID: configure-hdb
:ID:       af4bb15a-67f0-4e1a-8ce6-18c118ff10cd
:END:
#+begin_verse
Где работаем: контейнеры *server-.....*
#+end_verse

Для запуска сервиса *ldap* (*slapd*) необходимо подготовить директорию и
файл конфигурации базы данных. Расположение образца файла настройки, в
*5/2.3*
#+name: run-db-config5
#+begin_src sh :exports none
    cp /etc/openldap/DB_CONFIG.example /var/lib/ldap/DB_CONFIG
    chown ldap. /var/lib/ldap/DB_CONFIG

#+end_src
#+caption: Конфигурация БД для *5/2.3*
#+begin_src sh :exports code :noweb yes
<<run-db-config5>>
#+end_src
а в *6/2.4*
#+name: run-db-config6
#+begin_src sh :exports none
    cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG
    chown ldap. /var/lib/ldap/DB_CONFIG

#+end_src
#+caption: Конфигурация БД для *6/2.4*
#+begin_src sh :exports code :noweb yes
<<run-db-config6>>
#+end_src
Используем настройки без изменений в обеих конфигурациях. В подразделе
[[#hdb-domain-config]] будет осуществлено связывание базы данных *HDB* и
точки ветвления дерева DIT, соответствующей домену
*dc=mercury,dc=febras,dc=net*.

#+begin_tip
В случае использования *OpenLDAP* версии *2.4* вместо базы данных
*HDB* в качестве бэкенда можно использовать отображаемую в памяти базу
данных *MDB*. Версия *2.3* не поддерживает *MDB*.
#+end_tip

** Добавление файлов наборов схем данных
:PROPERTIES:
:CUSTOM_ID: add-schemas
:ID:       6638ce89-fc58-4610-aa0a-ab3ade7d3825
:END:
#+begin_verse
Где работаем: контейнеры *server-.....*
#+end_verse
Каталог LDAP имеет раздел *cn=schema*, содержащий все определения
системной схемы данных, которые вкомилированы в *ldap* (*slapd*). Сюда
же подключаются дополнительные специфические схемы данных,
см. расп. [[slapd-ldif]]. Подготовим
необходимые файлы (не включенные в поставку *OpenLDAP*), для *5/2.3*
#+name: schema-prepare5
#+begin_src sh :exports none
    cp /usr/share/doc/sudo-1.7.2p1/schema.OpenLDAP /etc/openldap/schema/sudo.schema
    chown ldap. /etc/openldap/schema/sudo.schema

#+end_src
#+name: schema-prepare6
#+begin_src sh :exports none
    cp /usr/share/doc/sudo-1.8.6p3/schema.OpenLDAP /etc/openldap/schema/sudo.schema
    chown ldap. /etc/openldap/schema/sudo.schema

#+end_src
#+caption: Добавление файлов схем данных для *5/2.3*
#+begin_src sh :exports code :noweb yes
<<schema-prepare5>>
#+end_src
и для *6/2.4*
#+caption: Добавление файлов схем данных для *6/2.4*
#+begin_src sh :exports code :noweb yes
<<schema-prepare6>>
#+end_src

В подразделе [[#create-sudoers]] для создания подразделения *sudoers*
используется класс из файла *sudo.schema*.

** Выбор варианта настройки схемы каталога LDAP
:PROPERTIES:
:CUSTOM_ID: choose-setup
:ID:       cb0ed9d0-14cc-4969-897d-a398e2f1ea65
:END:

Конфигурация *6/2.4* поставляется с тремя вариантами базовых настроек,
осуществляемых через файлы *slapd.conf.obsolete*, *slapd.ldif.example*
и, доступной по умолчанию, предварительно сформированной директорией
*slapd.d*. При этом, настройка с помощью файла *slapd.ldif.example*
подразумевает использование утилиты *slapadd*, как это рекомендуется в
разделе "быстрый старт"
руководства[fn::http://pro-ldap.ru/tr/admin24/quickstart.html]. Конфигурация
*5/2.3* по умолчанию настраивается только файлом *slapd.conf*,
предварительно сформированная директория *slapd.d* в формате *ldif*
отсутствует. Такой подход считается устаревшим,
рекомендуется[fn::http://pro-ldap.ru/tr/admin24/slapdconf2.html#Converting%20old%20style%20slapd.conf%20file%20to%20cn=config%20format]
использовать *ldif* формат и преобразовывать файл *slapd.conf*
настройки в директорию *slapd.d* с помощью утилиты *slaptest*.

Все варианты настроек разделяются на два существенно различающихся
способа. Первый способ включает в себя настройку с помощью *conf* файла
(конвертация через *slaptest*) и предварительно сформированную директорию
*slapd.d* (только для версии *2.4*). Эти два варианта являются
взаимозаменяемыми и формируют практически идентичные результирующие
файлы директории *slapd.d*. Второй способ заключается в использовании
файла *slapd.ldif* и утилиты *slapdd*. В этом случае, содержимое
файлов директории *slapd.d* существенно отличается, по сравнению с
первым способом. Дело в том, что при использовании первого способа в
файлах директории *slapd.d* присутствует большое количество
дополнительных параметров (явно не указанных в файле *slapd.conf*), а
при использовании второго --- только те, которые явно прописываются в
файле *slapd.ldif*.
# Хотя, здесь обнаружилось и небольшое исключение для записи *frontend*.

#+caption: Поддержка способов настройки схемы каталога LDAP различными версиями *OpenLDAP*
| Способы настройки                                  | поддержка *ldif*       | *2.3* | *2.4* |
|----------------------------------------------------+------------------------+-------+-------|
| Настройка с помощью файла *slapd.conf*             | конвертация *slaptest* | да    | да    |
| Настройка с помощью файла *slapd.ldif*             | да                     | особо | особо |
| Предварительно сформированная директория *slapd.d* | да                     | нет   | да    |

Какой вариант настройки выбрать? Если требуется наличие тех
дополнительных параметров, которые разработчики посчитали нужным
включить в настройки по умолчанию, то выбирается первый способ
настройки --- основной. При этом, если выбирается
*OpenLDAP 2.3*, то используются файл *slapd.conf* и утилита *slaptest*. А
если версия *2.4*, то можно в качестве равноценной альтернативы воспользоваться
предварительно сформированной директорией *slapd.d*.

#+begin_note
Первичный доступ к каталогу LDAP, использующему только предварительно
сформированную директорию *slapd.d* без *conf*-файла, осуществляется
при помощи *ldapi* интерфейса, когда в качестве *rootdn* выступает
системный пользователь *root* (при этом его *dn* выглядит как
*gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth*). В случае
использования *conf*-файла необходимо указать пароль для
*rootdn*. Пользователь *rootdn* имеет права на чтение и запись для
всего содержимого. Знак "***" в ACL применяется ко всем записям, кроме
записи *rootdn*.
#+end_note
# В случае *5/2.3* при использовании *-Y
# EXTERNAL -H ldapi:///* флагов по мере отладки появляются ошибки *Can't
# contact LDAP server (-1)*, *Insufficient access (50)* и *<olcRootPW>
# can only be set when rootdn is under suffix*. Последнюю пока разрешить
# не удается, поэтому используется явное задание пароля для rootdn
# (*cn=Manager,cn=config*) в *conf*-файле и последующее его изменение
# через *ldapmodify*, имитируя использование *ldapi*.

Если же потребуется тщательно настраивать конфигурацию с нуля,
полностью контролируя все параметры которые будут задействованы, то
нужно воспользоваться вторым способом --- дополнительным.

** Предварительная настройка схемы каталога LDAP
:PROPERTIES:
:CUSTOM_ID: configure-slapd-conf
:ID:       fd3e3e26-d416-4cc5-9dfa-554caeaf7830
:END:
#+begin_verse
Где работаем: контейнеры *server-conf.*
#+end_verse

Продемонстрируем первый способ настройки. Внесем небольшие
изменения в конфигурационный файл для *5/2.3*

#+begin_html
<div align="right">
<a onclick="toggleDiv2('myContent',$(this));" class="fa fa-caret-right">/root/slapd.conf</a>
</div>
#+end_html
#+HTML: <div id="myContent" style="display:none">
#+caption: Конфигурационный файл для *5/2.3*
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/schema/slapd.conf src conf-space :exports (when (eq org-export-current-backend 'odt) "none")
#+HTML: </div>
#+caption: Настройка *conf*-файла для *5/2.3*
#+INCLUDE: ../gen/slapd.diff src diff
и произведем первый запуск сервиса
#+caption: Первый запуск сервиса для *5/2.3*
#+begin_src sh :exports code :noweb yes
<<run-slapd-conf5>>
<<run-slapd-start5>>
#+end_src
Выполним аналогичные действия для *6/2.4*

#+begin_html
<div align="right">
<a onclick="toggleDiv2('myContent2',$(this));" class="fa fa-caret-right">/root/slapd.conf.obsolete</a>
</div>
#+end_html
#+HTML: <div id="myContent2" style="display:none">
#+caption: Конфигурационный файл для *6/2.4*
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/schema/slapd.conf.obsolete src conf-space :exports (when (eq org-export-current-backend 'odt) "none")
#+HTML: </div>
#+caption: Настройка *conf*-файла для *6/2.4*
#+INCLUDE: ../gen/slapd.obsolete.diff src diff

#+caption: Первый запуск сервиса для *6/2.4*
#+begin_src sh :exports code :noweb yes
<<run-slapd-conf6>>
<<run-slapd-start6>>
#+end_src

<<convert>>Теперь для обеих конфигураций можно осуществить переход к *ldif* формату и избавиться от *slapd.conf*
#+caption: Преобразование к *ldif* формату для *5/2.3* и *6/2.4*
#+begin_src sh :exports code :noweb yes
<<run-slapd-d>>
#+end_src

#+begin_note
Если не осуществлять переход к *ldif* формату, ограничившись *conf*
файлом, необходимо либо все настройки файла *domain.ldif*
(см. подраздел [[#hdb-domain-config]]) перенести в *conf* файл (записав их
в формате *conf* файла), либо загружать их каждый раз при перезапуске
сервиса. Использование *ldif* формата позволяет хранить все настройки
в директории *slapd.d*.
#+end_note

После перезапуска, для *5/2.3*
#+begin_src sh :exports code :noweb yes
<<run-slapd-start5>>
#+end_src
и для *6/2.4*
#+begin_src sh :exports code :noweb yes
<<run-slapd-start6>>
#+end_src
получаем сервисы, отличающиеся только настройками по умолчанию,
поставляемыми из базовых репозиториев в файлах
*/etc/openldap/slapd.conf* (*5/2.3*) и
*/usr/share/openldap-servers/slapd.conf.obsolete* (*6/2.4*).

Дальнейшая настройка схемы осуществляется в разделе [[#schema]].
** Дополнительно. Предварительная настройка схемы каталога LDAP с помощью ldif формата
:PROPERTIES:
:CUSTOM_ID: configure-slapd
:ID:       5e011bb7-7966-4613-8327-da484b6fd319
:END:
#+begin_verse
Где работаем: контейнеры *server-ldif.*
#+end_verse

Продемонстрируем второй способ настройки для обеих конфигураций.

#+name: run-slapd-conf5
#+begin_src sh :exports none
    mkdir -p /etc/openldap/certs/
    cp /root/server.key /root/server.crt /root/ca-bundle.crt /etc/openldap/certs/
    chown ldap. /etc/openldap/certs/server.key /etc/openldap/certs/server.crt /etc/openldap/certs/ca-bundle.crt

    mv /etc/openldap/slapd.conf /etc/openldap/slapd.conf.original
    cp /root/slapd.conf /etc/openldap/slapd.conf
    ROOT_PWD=$(slappasswd -s $LDAP_ROOT_PASSWORD)
    # Use bash variable substitution to escape special chars http://stackoverflow.com/a/14339705
    sed -i "s+%LDAP_ROOT_PASSWORD%+${ROOT_PWD//+/\\+}+" /etc/openldap/slapd.conf
    chown ldap. /etc/openldap/slapd.conf

    diff /etc/openldap/slapd.conf.original /etc/openldap/slapd.conf > /gen/slapd.diff || true
#+end_src

#+name: run-slapd-start5
#+begin_src sh :exports none
    service ldap start
#+end_src

#+name: schema2ldif
#+begin_src sh :exports none
    rm -rf /etc/openldap/slapd.d
    rm -f /etc/openldap/slapd.conf
    mkdir -p /etc/openldap/slapd.d

    oldpath=`pwd`
    cd /etc/openldap/schema
    SCHEMAD=`pwd` SCHEMAS='core.schema cosine.schema inetorgperson.schema nis.schema sudo.schema misc.schema ppolicy.schema' /root/2.5-schema-ldif.sh
    cp -R /etc/openldap/schema /gen/schema
    cd $oldpath

    ROOT_PWD=$(slappasswd -s $LDAP_ROOT_PASSWORD)
    # Use bash variable substitution to escape special chars http://stackoverflow.com/a/14339705
    sed -i "s+%LDAP_ROOT_PASSWORD%+${ROOT_PWD//+/\\+}+" /root/slapd.ldif
    slapadd -b cn=config -F /etc/openldap/slapd.d -l /root/slapd.ldif || true
    chown -R ldap. /etc/openldap/slapd.d/

#+end_src

#+name: run-slapd-d
#+begin_src sh :exports none
    sleep 3

    kill -INT `cat /var/run/openldap/slapd.pid`
    rm -rf /etc/openldap/slapd.d
    oldpath=`pwd`
    cd /etc/openldap
    mkdir slapd.d
    slaptest -f slapd.conf -F slapd.d
    chown -R ldap:ldap slapd.d
    chmod -R 0750 slapd.d
    mv slapd.conf slapd.conf.bak
    cd $oldpath
#+end_src

Конфигурация *5/2.3* поставляется со схемами только в *schema*
формате, а *6/2.4* --- как в *schema*, так и в *ldif* формате. Файл
*sudo.schema* доступен только в *schema* формате. С помощью скрипта
*2.5-schema-ldif.sh*[fn::https://github.com/boykov/cc-ldap-centos/blob/master/ldap-server/2.5-schema-ldif.sh]
преобразуем необходимые схемы. Чтобы иметь доступ к каталогу LDAP для
конфигурирования схемы, пропишем пароль менеджера схемы
*cn=Manager,cn=config*. Кроме того, добавим минимальные
настройки для *monitor* и настроим базу *HDB*. Используем
"оффлайновую" утилиту *slapadd* для создания минимума конфигурационных
настроек, позволяющих запустить сервер.

#+caption: Преобразование схем в *ldif* формат и задание начальной конфигурации
#+begin_src sh :exports code :noweb yes
<<schema2ldif>>
#+end_src
#+caption: *slapd.ldif*: формирование корневой записи DIT и контейнера для наборов схем данных; конфигурирование базы данных *HDB*, подключение мониторинга баз данных и загрузка модуля *ppolicy*
#+name: slapd-ldif
#+INCLUDE: ../schema/slapd.ldif src ldif

#+name: run-slapd-start6
#+begin_src sh :exports none
    service slapd start
#+end_src
#+name: run-slapd-conf6
#+begin_src sh :exports none
    cp /root/server.key /root/server.crt /root/ca-bundle.crt /etc/openldap/certs/
    chown ldap. /etc/openldap/certs/server.key /etc/openldap/certs/server.crt /etc/openldap/certs/ca-bundle.crt

    cp /root/slapd.conf.obsolete /etc/openldap/slapd.conf
    ROOT_PWD=$(slappasswd -s $LDAP_ROOT_PASSWORD)
    # Use bash variable substitution to escape special chars http://stackoverflow.com/a/14339705
    sed -i "s+%LDAP_ROOT_PASSWORD%+${ROOT_PWD//+/\\+}+" /etc/openldap/slapd.conf
    chown ldap. /etc/openldap/slapd.conf
    rm -rf /etc/openldap/slapd.d

    diff /usr/share/openldap-servers/slapd.conf.obsolete /etc/openldap/slapd.conf > /gen/slapd.obsolete.diff || true
#+end_src

После перезапуска, для *5/2.3*
#+begin_src sh :exports code :noweb yes
<<run-slapd-start5>>
#+end_src
и для *6/2.4*
#+begin_src sh :exports code :noweb yes
<<run-slapd-start6>>
#+end_src
получаем сервисы, отличающиеся только настройками схемы, содержащимися
в исходных кодах разных версий *OpenLDAP*.  Например, для конфигурации
*5/2.3* требуется добавить настройки *frontend* базы, а для *6/2.4*
эти настройки добавляются автоматически из исходного кода *OpenLDAP*
(что, кстати говоря, несколько нарушает прозрачность --- появляется то,
что явно не указано в файле *slapd.ldif*). Все дальнейшие изменения
уже осуществляются с помощью "онлайновых" утилит *ldapadd* и
*ldapmodify*.
# Вероятно, это потому, что версия *2.4* официально поддерживает
# конфигурирование с помощью *slapadd* и ldif* формат.
# Для версии *2.3* официально поддерживаемым является
# способ конфигурирования через *conf* файл. 

#+name: add-front5
#+begin_src sh :exports none
    sleep 2

    ldapadd -v -D cn=Manager,cn=config -f /root/front.ldif -x -w $LDAP_ROOT_PASSWORD || true
#+end_src

#+caption: Добавление *frontend* для *5/2.3*
#+begin_src sh :exports code :noweb yes
<<add-front5>>
#+end_src

Специальная база данных *frontend* содержит настройки, которые
применяются глобально ко всем остальным базам данных. В нашем случае в
наличии одна база *HDB* и никаких специальных настроек для *frontend*.

#+caption: *front.ldif*: добавление служебной базы данных *frontend* (только для *5/2.3*)
#+name: front-ldif
#+INCLUDE: ../schema/front.ldif src ldif

#+name: run-postfix
#+begin_src sh :exports none
    kill -INT `cat /var/run/openldap/slapd.pid` || true
    sleep 2

    mkdir /data/lib /data/etc
    cp -ar /var/lib/ldap /data/lib
    cp -ar /etc/openldap /data/etc
fi

rm -rf /var/lib/ldap && ln -s /data/lib/ldap /var/lib/ldap
rm -rf /etc/openldap && ln -s /data/etc/openldap /etc/openldap

service httpd start
exec /usr/sbin/slapd -h "ldap:/// ldaps:/// ldapi:///" -u ldap -d $DEBUG_LEVEL
#+end_src

#+begin_src sh :tangle ~/git/cc/cc-ldap-centos/ldap-server/run5.sh :comments noweb :shebang "#!/bin/bash" :exports none :noweb yes
<<run-prefix>>
<<run-db-config5>>
<<schema-prepare5>>
<<run-slapd-conf5>>
<<run-slapd-start5>>
<<run-slapd-d>>
<<run-postfix>>
#+end_src
# <<schema2ldif>>
# <<run-slapd-start5>>
# <<run-modify>>
# <<add-front5>>

#+begin_src sh :tangle ~/git/cc/cc-ldap-centos/ldap-server/run6.sh :comments noweb :shebang "#!/bin/bash" :exports none :noweb yes
<<run-prefix>>
<<run-db-config6>>
<<schema-prepare6>>
<<run-slapd-conf6>>
<<run-slapd-start6>>
<<run-slapd-d>>
<<run-postfix>>
#+end_src
# <<schema2ldif>>
# <<run-slapd-start6>>
# <<run-modify>>

Дальнейшая настройка схемы осуществляется в разделе [[#schema]].
* Настройка аутентификации пользователей при помощи LDAP
:PROPERTIES:
:CUSTOM_ID: authentication
:ID:       49b5e2df-0c06-445a-ae9e-66bcd6cc9e40
:END:

#+begin_quote
Необходимо разработать документацию по настройке аутентификации пользователей при помощи LDAP в ОС *CentOS 5*. Проверить работоспособность выработанных инструкций в ОС *CentOS 6*.

В документацию должно входить:

- Список пакетов, которые необходимо установить;
- Список файлов, модификация которых необходима для настройки процесса аутентификации посредством LDAP;
- Описание всех опций, выставляемых в этих файлах.
#+end_quote

Рассмотрим три задачи, возникающие при настройке аутентификации
пользователей при помощи LDAP. Чтобы провести аутентификацию
пользователя необходимо, чтобы клиентский хост имел
право на чтение пользовательских данных на сервере LDAP. Для этого
потребуется обеспечить механизм аутентификации клиентского хоста при
помощи LDAP. Далее следует основная задача --- это, собственно, настройка
аутентификации пользователей в системе при помощи LDAP. И, наконец,
вспомогательная задача аутентификации пользователя с повышением прав.

** Требуемые пакеты
:PROPERTIES:
:CUSTOM_ID: client-packages
:ID:       a4da4894-117b-40b6-a6c7-1447f083d6e1
:END:
#+begin_verse
Где работаем: контейнеры *client.*
#+end_verse

Для настройки клиентского подключения в *5/2.3* понадобятся следующие пакеты

#+begin_src sh :exports results :results org
cat ../ldap-client/Dockerfile5 | grep "openldap\|sendmail\|libus" | sed "s|RUN ||g"
#+end_src

#+caption: Установка клиента для *5/2.3*
#+RESULTS:
#+BEGIN_SRC org
yum install -y openssh-server openldap-clients nss_ldap authconfig
yum install -y openldap openldap-servers finger sudo
yum install -y sendmail sendmail-cf
yum install -y libuser
#+END_SRC

Здесь также необходим пакет *openldap-servers*, поскольку утилиты для миграции пользователей содержатся в нем. Для *6/2.4* выполним

#+begin_src sh :exports results :results org
cat ../ldap-client/Dockerfile6 | grep "openldap\|sendmail\|libus" | sed "s|RUN ||g"
#+end_src

#+caption: Установка клиента для *6/2.4*
#+RESULTS:
#+BEGIN_SRC org
yum install -y openssh-server openldap-clients nss-pam-ldapd authconfig
yum install -y openldap migrationtools finger sudo
yum install -y sendmail sendmail-cf
yum install -y libuser
#+END_SRC

#+name: client5-run-prefix
#+begin_src sh :exports none

cp -R /etc /gen/etc5/etc

opts="-N -x group \
         -x group- \
         -x shadow \
         -x gshadow \
         -x system-auth-ac \
         -x authconfig \
         -x passwd- \
         -x passwd"

#+end_src

#+name: client6-run-prefix
#+begin_src sh :exports none

cp -R /etc /gen/etc6/etc

opts="-N -x fingerprint-auth-ac \
         -x fingerprint-auth \
         -x password-auth-ac \
         -x password-auth \
         -x smartcard-auth-ac \
         -x smartcard-auth \
         -x system-auth-ac \
         -x S12nslcd \
         -x K88nslcd \
         -x authconfig \
         "

#+end_src

#+name: client5-run-setup
#+begin_src sh :exports none
authconfig --enableshadow --enablemkhomedir --enableldap --enableldapauth \
	   --ldapserver=$LDAP_SERVER --ldapbasedn=$LDAP_BASEDN --update

sed -i "s|pam_mkhomedir.so|pam_mkhomedir.so skel=/etc/skel umask=0077|g" /etc/pam.d/system-auth
#+end_src

#+name: client6-run-setup
#+begin_src sh :exports none
authconfig --enablemkhomedir --enableldap --enableldapauth \
	   --ldapserver=$LDAP_SERVER --ldapbasedn=$LDAP_BASEDN --update
#+end_src

#+name: client-libuser
#+begin_src sh :exports none
sed -i "s|^modules = files shadow|modules = ldap|" /etc/libuser.conf
sed -i "s|create_modules = files shadow|create_modules = ldap|" /etc/libuser.conf
sed -i "s|# server = ldap|server = ldap://$LDAP_SERVER|" /etc/libuser.conf
sed -i "s|# basedn = dc=example,dc=com|basedn = $LDAP_BASEDN|" /etc/libuser.conf
sed -i "s|# userBranch = ou=People|userBranch = ou=users|" /etc/libuser.conf
sed -i "s|# groupBranch = ou=Group|groupBranch = ou=groups|" /etc/libuser.conf
sed -i "s|# binddn = cn=Manager,dc=example,dc=com|binddn = cn=Manager,dc=mercury,dc=febras,dc=net|" /etc/libuser.conf
#+end_src

#+name: client5-run-sudoers
#+begin_src sh :exports none
echo sudoers_base dc=mercury,dc=febras,dc=net >> /etc/ldap.conf
echo sudoers_debug 0 >> /etc/ldap.conf
echo binddn uid=authenticator,ou=system,dc=mercury,dc=febras,dc=net >> /etc/ldap.conf
echo bindpw secret >> /etc/ldap.conf

chmod 600 /etc/ldap.conf

sed -i "s|	positive-time-to-live	passwd		600|	positive-time-to-live	passwd		0|g" /etc/nscd.conf
sed -i "s|	negative-time-to-live	passwd		20|	negative-time-to-live	passwd		0|g" /etc/nscd.conf

/etc/init.d/nscd start

#+end_src

#+name: client6-run-sudoers
#+begin_src sh :exports none

echo sudoers:  files ldap >> /etc/nsswitch.conf

echo uri ldap://$LDAP_SERVER/ >> /etc/sudo-ldap.conf
echo base dc=mercury,dc=febras,dc=net >> /etc/sudo-ldap.conf
echo sudoers_base dc=mercury,dc=febras,dc=net >> /etc/sudo-ldap.conf
echo sudoers_debug 0 >> /etc/sudo-ldap.conf
echo binddn uid=authenticator,ou=system,dc=mercury,dc=febras,dc=net >> /etc/sudo-ldap.conf
echo bindpw secret >> /etc/sudo-ldap.conf

echo binddn uid=authenticator,ou=system,dc=mercury,dc=febras,dc=net >> /etc/pam_ldap.conf
echo bindpw secret >> /etc/pam_ldap.conf

echo binddn uid=authenticator,ou=system,dc=mercury,dc=febras,dc=net >> /etc/nslcd.conf
echo bindpw secret >> /etc/nslcd.conf

chmod 600 /etc/sudo-ldap.conf
chmod 600 /etc/pam_ldap.conf
chmod 600 /etc/nslcd.conf

/etc/init.d/nslcd stop
rm /var/run/nslcd/*
/etc/init.d/nslcd start

#+end_src

#+name: client5-run-postfix
#+begin_src sh :exports none

cp -R /etc /gen/etc5/etcnew

diff -r $opts /gen/etc5/etc /gen/etc5/etcnew > /gen/client5.diff || true
sed -i 's|.*etcnew|/etc|g' /gen/client5.diff
diff -q -r /gen/etc5/etc /gen/etc5/etcnew | awk -F"etcnew" '{print "/etc"$2}' | sed 's/ differ//g' | sed 's|: |/|g' > /gen/client5-files.diff || true

rm -rf /gen/etc5/etc
rm -rf /gen/etc5/etcnew

getent passwd username

/usr/share/openldap/migration/migrate_passwd.pl /etc/passwd > /gen/passwd.ldif

/usr/share/openldap/migration/migrate_group.pl /etc/group > /gen/group.ldif

/usr/sbin/sshd -D
#+end_src

#+name: client6-run-postfix
#+begin_src sh :exports none

cp -R /etc /gen/etc6/etcnew

diff -r $opts /gen/etc6/etc /gen/etc6/etcnew > /gen/client6.diff || true
sed -i 's|.*etcnew|/etc|g' /gen/client6.diff
diff -q -r /gen/etc6/etc /gen/etc6/etcnew | grep -v "K88nslcd" | grep -v "S12nslcd" | awk -F"etcnew" '{print "/etc"$2}' | sed 's/ differ//g' | sed 's|: |/|g' > /gen/client6-files.diff || true

rm -rf /gen/etc6/etc
rm -rf /gen/etc6/etcnew

getent passwd username

# do not need migrate centos 6 users
# /usr/share/migrationtools/migrate_passwd.pl /etc/passwd > /gen/passwd6.ldif
# /usr/share/migrationtools/migrate_group.pl /etc/group > /gen/group6.ldif
/usr/sbin/sshd -D
#+end_src


#+begin_src sh :tangle ~/git/cc/cc-ldap-centos/ldap-client/run5.sh :comments noweb :shebang "#!/bin/bash" :exports none :noweb yes
<<client5-run-prefix>>
<<client-libuser>>
<<client5-run-setup>>
<<client5-run-sudoers>>
<<client5-run-postfix>>
#+end_src

#+begin_src sh :tangle ~/git/cc/cc-ldap-centos/ldap-client/run6.sh :comments noweb :shebang "#!/bin/bash" :exports none :noweb yes
<<client6-run-prefix>>
<<client-libuser>>
<<client6-run-setup>>
<<client6-run-sudoers>>
<<client6-run-postfix>>
#+end_src

** Используемые команды
:PROPERTIES:
:CUSTOM_ID: client-commands
:ID:       6e7a8278-7334-46f7-b289-07da7f2b6d14
:END:
#+begin_verse
Где работаем: контейнеры *client.*
#+end_verse

Воспользуемся утилитой *authconfig* для настройки аутентификации пользователей при помощи LDAP.

В *5/2.3* приходится использовать параметр *enableshadow*, поскольку
эта функциональность отключена по умолчанию. Отдельно укажем параметр
*sudoers_base* и параметры *binddn* и *bindpw* в настройках для
*pam_ldap* (см. также настройки для *authenticator* в подразделе
[[#hdb-domain-config]]).

#+caption: Настройка клиента для *5/2.3*
#+begin_src sh :exports code :noweb yes
<<client5-run-setup>>
<<client5-run-sudoers>>
#+end_src

#+caption: Настройка libuser для *5/2.3* и *6/2.4*
#+begin_src sh :exports code :noweb yes
<<client-libuser>>
#+end_src

Для *6/2.4* приходится отдельно прописывать параметр
*sudoers* для *nsswitch.conf*, а в *5/2.3* он уже
установлен еще до запуска *authconfig*. Для
настройки *sudo* дополнительно указываются параметры *uri* и *base*,
поскольку файл настроек теперь отдельный --- *sudo-ldap.conf*. А параметры
*binddn* и *bindpw* необходимо указать в 3х файлах: *nslcd.conf*,
*pam_ldap.conf* и *sudo-ldap.conf*.

#+caption: Настройка клиента для *6/2.4*
#+begin_src sh :exports code :noweb yes
<<client6-run-setup>>
<<client6-run-sudoers>>
#+end_src

** Изменяемые файлы
:PROPERTIES:
:CUSTOM_ID: client-files
:ID:       386e40de-d1f2-4dc8-994b-5870d4ec42fb
:END:

Файлы, которые были модифицированы настройками подраздела [[#client-commands]] в случае *5/2.3*

- *nsswitch.conf* --- файл с настройками системных баз данных (в
  т.ч. порядка их просмотра) для диспетчера службы имен. Можно
  указывать спецификации службы, такие как *files*, *ldap*.
- */etc/ldap.conf* --- конфигурационный файл для *pam_ldap*.
- */etc/openldap/ldap.conf* --- конфигурационный файл для установки
  общесистемных настроек ldap-клиентов.
- *system-auth* --- назначением этого файла является
  обеспечение общей конфигурации для всех приложений и сервисов,
  вызывающих библиотеку PAM.
- *libuser.conf* --- файл с настройками стандартизованного интерфейса
  для управления и администрирования аккаунтов пользователей и групп.
- *nscd.conf* --- конфигурационный файл демона кеша сервиса имен.

#+caption: Список измененных файлов для *5/2.3*
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/client5-files.diff src diff

Здесь в файлах *group*, *group-*, *gshadow*, *shadow*, *passwd-*,
*passwd* --- несущественные изменения, связанные с опциями
*enableshadow* и *enableldap*; *system-auth-ac* и *system-auth* это
один и тот же файл; файл *authconfig* содержит все опции, указанные
при конфигурировании.

Для *6/2.4*, кроме файлов *nsswitch.conf*,
*/etc/openldap/ldap.conf* и *system-auth*, задействуются:

- *nslcd.conf* --- конфигурационный файл для службы сервиса имен LDAP.
- Файлы, аналогичные *system-auth*. Они содержат только модули,
  которые выполняют аутентификацию с соответствующим видом
  аутентификационных токенов. Файлы *fingerprint-auth* и
  *smartcard-auth* нас не интересуют, а содержимое *password-auth*
  полностью идентично содержимому *system-auth*.
- *pam_ldap.conf* --- конфигурационный файл для *pam_ldap*.
- *sudo-ldap.conf* --- ldap-специфичная конфигурация для *sudo*. В
  случае *5/2.3* *sudo* использует файл */etc/ldap.conf*.

#+caption: Список измененных файлов для *6/2.4*
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/client6-files.diff src diff

** Описание опций
:PROPERTIES:
:CUSTOM_ID: client-options
:ID:       a8dfad56-906c-45b6-9ef1-7d5a9cfa854f
:END:

*** Опции, связанные с conf-файлами для *5/2.3*
:PROPERTIES:
:ID:       2cffdc55-f975-415c-a4df-0b8ba3dab1b7
:END:

Файл */etc/ldap.conf*. Параметр *host* не рекомендуется к использованию,
используется параметр *uri*, который указывает адрес LDAP сервера и
протокол, по которому осуществляется взаимодействие. Остальные
параметры понятны: SSL не используется, ожидается *md5* шифрование для
паролей в PAM.

Файл *nsswitch.conf*. Для баз данных *passwd*, *shadow*, *group*,
*netgroup* и *automount* добавляется спецификация службы *ldap*.
#+begin_src sh :exports none :results org
cat ../gen/client5.diff | grep -n "/etc/nscd.conf"
cat ../gen/client5.diff | grep -n "/etc/pam.d/system-auth"
#+end_src

#+RESULTS:
#+BEGIN_SRC org
42:/etc/nscd.conf
71:/etc/pam.d/system-auth
#+END_SRC

#+caption: Опции, выставляемые в файлах */etc/ldap.conf*, *libuser.conf*  для *5/2.3* (а)
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/client5.diff src diff :lines "1-42"

#+caption: Опции, выставляемые в файлах *nscd.conf*, *nsswitch.conf*, */etc/openldap/ldap.conf* для *5/2.3* (б)
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/client5.diff src diff :lines "42-71"

*** Опции, связанные с файлом system-auth для *5/2.3*
:PROPERTIES:
:ID:       0c82d86b-ddc5-43c1-b4ea-a58af035d923
:END:

# - *auth*
#   - sufficient *pam_unix.so*: порядок опций не важен. Без изменения.
#   - requisite *pam_succeed_if.so*: проверяет характеристику *uid* аккаунта, не
#     записывая ничего в системный log-файл
#   - sufficient *pam_ldap.so*: pam_ldap должен всегда использовать
#     первый пароль, доступный в аутентификационном стеке
# - *account*
#   - required *pam_unix.so*: игнорируются ошибки чтения shadow информации
#   - sufficient *pam_succeed_if.so*:
#+caption: Опции, выставляемые в файле *system-auth* для *5/2.3*
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/client5.diff src diff :lines "71-"

*** Опции, связанные с conf-файлами для *6/2.4*
:PROPERTIES:
:ID:       bffd7a17-e40c-4550-92d4-2d4ece369ca3
:END:

В файлах *nslcd.conf*, *pam_ldap.conf* и *sudo-ldap.conf* дублируются
стандартные опции.

#+begin_src sh :exports none :results org
cat ../gen/client6.diff | grep -n "/etc/pam.d/system-auth"
#+end_src

#+RESULTS:
#+BEGIN_SRC org
61:/etc/pam.d/system-auth
#+END_SRC

#+caption: Опции, выставляемые в файлах *libuser.conf*, *nslcd.conf*, *nsswitch.conf* и */etc/openldap/ldap.conf* для *6/2.4*
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/client6.diff src diff :lines "1-61"

*** Опции, связанные с файлом system-auth для *6/2.4*
:PROPERTIES:
:ID:       5bedb39f-f4fd-416b-9c11-ebba1119ac1a
:END:

#+caption: Опции, выставляемые файлах *system-auth*, *pam_ldap.conf* и *sudo-ldap.conf* для *6/2.4*
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/client6.diff src diff :lines "61-"

*** Дополнительно. PAM: необходимые сведения
:PROPERTIES:
:ID:       e8f37bcc-b065-41f2-9398-80816656d325
:END:
Утилита *authconfig* осуществляет необходимую модификацию PAM
(Pluggable Authentication Modules), добавляя библиотеку *pam_ldap.so*
и дополнительные настройки, обеспечивающие поддержку механизма
аутентификации средствами LDAP. PAM --- это стандартный интерфейс,
который может работать как с локальной базой данных *files*, так и c
базой *ldap*.

С точки зрения PAM, аутентификация состоит из нескольких независимых задач[fn::http://www.intuit.ru/studies/courses/73/73/lecture/2202?page=2]:
- *account* (управление учетными записями) --- описывает службу
  проверки учетной записи, которая отвечает на вопросы: "есть ли
  такая запись и не истек ли срок действия пароля?", "имеет ли
  пользователь право доступа к запрошенному ресурсу?"
- *auth* (управление аутентификацией) --- описывает службу проверки
  идентичности пользователя. Эта служба реализована посредством
  диалога между пользователем и программой аутентификации: "как тебя
  зовут и какой у тебя пароль?".
- *password* (управление паролями) --- описывает службу изменения
  пароля; такая служба должна быть тесно связана со службой проверки
  учетной записи. Например, по истечении срока действия пароля
  система требует у пользователя новый пароль.
- *session* (управление сессиями) --- описывает работы, которые
  должны быть выполнены до того, как ресурс будет предоставлен, или
  после того, как он будет освобожден (например, после разрыва
  соединения между программой-клиентом и вызванной им
  службой-сервером). Скажем, это может быть протоколирование начала
  и конца соединения, монтирование домашнего каталога пользователя и
  т.п.

Определение поведения PAM в случае, если модуль примет решение об
отказе в аутентификации (допустим, сочтет пароль неверным). Возможные
варианты действий:
- *requisite* --- отказ приводит к немедленному прекращению аутентификации;
- *required* --- отказ приводит к тому, что PAM API возвращает ошибку,
  но только после того, как будут вызваны все оставшиеся в стеке
  модули (для этого приложения);
- *sufficient* --- успешная аутентификация достаточна для
  удовлетворения требований по аутентификации стека модулей (если
  предыдущий модуль в стеке выдал отказ в аутентификации, то успех
  аутентификации текущего модуля игнорируется);
- *optional* --- успех или отказ в аутентификации с использованием
  данного модуля имеет значение, только если это единственный модуль в
  стеке, ассоциированном с данным приложением и типом аутентификации
  (т.е. нет других *optional* модулей).

* Схема каталога LDAP
:PROPERTIES:
:CUSTOM_ID: schema
:ID:       b64d7c36-b2b3-49ac-9620-d7c94eb9ea31
:END:
#+begin_quote
Необходимо разработать схему каталога LDAP, предназначенную для хранения учетных данных пользователей кластера.
#+end_quote

Использование только *ldif* формата позволяет единообразно
конфигурировать схему каталога LDAP, начиная с корневой записи DIT
(Directory Information Tree) *cn=config*, включающей точку ветвления
*cn=schema,cn=config*, которая содержит наборы схем данных
(см. подраздел [[#configure-slapd]]), переходя к корневой записи домена
(см. подраздел [[#root-domain]]) и заканчивая листьями этого дерева
(см. подразделы [[#new-user-ldap]], [[#add-users]]) --- записями, содержащими
нужную информацию:
#+begin_src sh :exports results :results raw
grep -i -h -e  "^#+caption.*\\.ldif" index.org | sed "s/#+caption://g" | sed "s/:/|/g" | sed "s/^/|/"
#+end_src

#+RESULTS:
| *slapd.ldif*   | формирование корневой записи DIT и контейнера для наборов схем данных; конфигурирование базы данных *HDB* и подключение мониторинга баз данных       |
| *front.ldif*   | добавление служебной базы данных *frontend* (только для *5/2.3*)                                                                                     |
| *domain.ldif*  | связывание суффикса, менеджера домена и его пароля с базой *HDB*; установка списка контроля доступа ACL                                              |
| *base.ldif*    | создание суффикса, менеджера домена, организационных единиц и учетной записи *authenticator*                                                         |
| *sudoers.ldif* | создание организационной единицы *sudoers*, добавление настроек по умолчанию для *sudo* и группы *sudowheel*, включенной в группу администраторов *sudo* |
| *user.ldif*    | создание нового пользователя, принадлежащего к группе *sudowheel*                                                                                        |
| *mercury.ldif* | пример результата миграции пользователей и групп с помощью утилит *migrationtools*                                                                   |

Если же используется *conf* формат, то надо иметь в виду, что
первый файл из этого ряда конфигурационных файлов
заменяется на *slapd.conf* (см. раздел [[#configure-slapd-conf]]).

#+begin_note
В данном руководстве слово "схема" используется в выражении /набор
схем данных/ (см. подраздел [[#add-schemas]]), означающим файл с
расширением *schema* или *ldif*, содержащий "низкоуровневое" описание
классов, атрибутов, синтаксисов атрибута и правил соответствия. Также,
оно используется в выражении /схема каталога LDAP/, т.е. для
"высокоуровнего" описания содержания, структуры и ограничений
целостности каталога LDAP, по аналогии с выражением /схема базы
данных/, применимым для реляционных баз данных. Возможности схемы
каталога LDAP определяются подключенными наборами схем данных. Можно
сказать, что /схема каталога LDAP/ --- это полное описание каталога
LDAP с помощью *ldif* формата. При этом, граница между схемой каталога
и пользовательскими данными, которые также хранятся в *ldif* формате,
становится условной. Кроме того, каталог LDAP использует /базу данных
*HDB*/ в качестве хранилища данных.
#+end_note

В таблице [[tab:schema-examples]] приведены примеры использования классов
и атрибутов схемы каталога LDAP. В данном разделе осуществляется
"высокоуровневая" разработка схемы каталога LDAP в *ldif* формате,
предназначенная для хранения учетных данных пользователей
кластера. Подключаются только указанные наборы схем данных,
разрабатывать дополнительные "низкоуровневые" наборы схем данных нет
необходимости.

#+name: tab:schema-examples
#+caption: Примеры наборов схем данных, классов, атрибутов и их использования
| Набор схем данных    | Классы                        | Атрибуты                 | Примеры использования               |
|----------------------+-------------------------------+--------------------------+-------------------------------------|
| openldap hardcoded   | top, olcDatabaseConfig        | uid, cn, olcSchemaDN     | slapd.ldif, domain.ldif, front.ldif |
| core.schema          | dcObject, organizationalRole  | dc, sn                   | base.ldif                           |
| cosine.schema        | simpleSecurityObject, account | userPassword             | base.ldif                           |
| inetorgperson.schema | inetOrgPerson                 | employeeNumber           |                                     |
| nis.schema           | posixAccount, posixGroup      | homeDirectory, gidNumber | user.ldif, mercury.ldif             |
| sudo.schema          | sudoRole                      | sudoUser                 | sudoers.ldif                        |
| misc.schema          | inetLocalMailRecipient        | mailRoutingAddress       | user.ldif                           |
| ppolicy.schema       | pwdPolicy                     | pwdAttribute             | base.ldif                           |



** build.sh 							   :noexport:
:PROPERTIES:
:CUSTOM_ID: build.sh
:ID:       5a8f20aa-fd6a-441f-9968-6ec191a52faa
:END:
#+begin_src sh :tangle ~/git/cc/cc-ldap-centos/schema/build.sh :comments noweb :shebang "#!/bin/bash" :exports none :noweb yes
<<build-schema>>
<<add-user>>
#+end_src

** Настройка каталога LDAP
:PROPERTIES:
:CUSTOM_ID: minimal-schema
:ID:       3446a07c-3649-4e85-84c1-044e78c340dc
:END:
#+begin_verse
Где работаем: контейнеры *server-.....*
#+end_verse

В разделе [[#authentication]] перечислены три задачи, возникающие при
настройке аутентификации пользователей при помощи LDAP, и
продемонстрирована реализация клиентской части. Серверная часть ---
каталог LDAP --- должна обеспечивать поддержку данной
функциональности. Нам потребуются контейнеры для хранения учетных
данных пользователей и групп. Разрешим доступ к данным пользователей
только для клиентских систем со специальной учетной записью, запретим
анонимный доступ. Добавим тип учетных записей пользователей,
обладающих разрешениями *sudo*.

Чтобы получить минимально работоспособный сервер LDAP, позволяющий
осуществлять аутентификацию для клиентских систем, внесем необходимые
изменения в схему каталога.

#+name: build-schema
#+begin_src sh :exports none

cd /schema

cp domain.ldif domain+.ldif
MANAGER_PWD=$(slappasswd -s $LDAP_MANAGER_PASSWORD)
# Use bash variable substitution to escape special chars http://stackoverflow.com/a/14339705
sed -i "s+%LDAP_MANAGER_PASSWORD%+${MANAGER_PWD//+/\\+}+" domain+.ldif
ldapmodify -v -D cn=Manager,cn=config -f domain+.ldif -x -w $LDAP_ROOT_PASSWORD
rm domain+.ldif
ldapadd -x -D 'cn=Manager,dc=mercury,dc=febras,dc=net' -w $LDAP_MANAGER_PASSWORD -f base.ldif
ldapadd -x -D 'cn=Manager,dc=mercury,dc=febras,dc=net' -w $LDAP_MANAGER_PASSWORD -f sudoers.ldif
#+end_src

#+begin_src sh :exports code :noweb yes
<<build-schema>>
#+end_src

** Связывание базы данных HDB с доменом и настройка ACL
:PROPERTIES:
:CUSTOM_ID: hdb-domain-config
:ID:       d8a0d9fc-cb9b-46c3-b6f8-abd2f6766517
:END:

В подразделе [[#configure-hdb]] была подготовлена база данных
*HDB*. Сконфигурируем (см. расп. [[domain-ldif]]) её для доменного имени
*dc=mercury,dc=febras,dc=net*, определим менеджера домена
*cn=Manager,dc=mercury,dc=febras,dc=net* и его пароль. Также, добавим
правила доступа к атрибуту *userPassword* (см. подраздел
[[#new-user-ldap]]): для владельца записи --- /write/ и для
неавторизованного пользователя --- /auth/. Для атрибута
*shadowLastChange*: владелец и пользователь *authentificator* имеют право на запись
/write/. Анонимный доступ будет разрешен только для заголовочной части
записи подразделения *public* и для ее содержимого. Ко всем
остальным объектам в базе применяется правило доступа для пользователя
*authentificator* --- /read/.

Учетные записи из подразделения *users* могут считываться модулем PAM
из БД LDAP для осуществления аутентификации про входе в систему на
клиентских машинах, но они не могут (в нынешней конфигурации)
применяться для аутентификации в самой БД LDAP. Поэтому, чтобы не
предоставлять анонимный доступ к данным БД LDAP, применяется учетная
запись *authenticator*, которую модуль PAM использует для работы с БД
LDAP. В нашем случае, доступ к большей части информации на сервере
каталогов (кроме подразделения *public* для анонимного доступа) имеют
только те компьютеры, на которых в качестве *binddn* присутствует
учетная запись *authenticator* (см. подраздел [[#client-commands]]).

# У записи *authenticator* есть два объектных класса *account* и
# *simpleSecurityObject*. Класс *account*, определенный в
# *cosine.schema*, описывает аккаунт, используемый для доступа к
# компьютерам и сетям. Этот класс не имеет поля для хранения пароля, по
# этой причине необходим вспомогательный класс *simpleSecurityObject*.

#+begin_note
Учетная запись *authenticator* добавляет дополнительный уровень
безопасности после анонимного доступа.
#+end_note

Текущую политику контроля доступа для БД (ACL) можно описать следущими
словами: она состоит из четырех правил, первые два из них определяют
права для атрибутов *userPassword* и *shadowLastChange*, которые
следуют из необходимости осуществления изменения пароля, сохранения
даты его изменения и проведения авторизации. Третье правило
несущественно. Четвертое правило разрешает доступ ко всем атрибутам
пользователю *authenticator*.

#+caption: *domain.ldif*: связывание суффикса, менеджера домена и его пароля с базой *HDB*; установка списка контроля доступа ACL  и привязка модуля *ppolicy* к *passwordDefault*
#+name: domain-ldif
#+INCLUDE: ../schema/domain.ldif src ldif

** Создание корневой записи домена
:PROPERTIES:
:CUSTOM_ID: root-domain
:ID:       98673b98-df88-4fb4-859f-9f8283c1346c
:END:

В подразделе [[#configure-slapd]] было продемонстрировано создание корневой
записи дерева DIT средствами формата *ldif* (эквивалентную настройку
можно осуществить при помощи файла конфигурации *conf*, как это
показано в подразделе [[#configure-slapd-conf]]). Теперь создадим корневую
запись домена, добавим необходимые атрибуты (см. расп. [[base-ldif]]),
корневой узел *dn: dc=mercury,dc=febras,dc=net*,
подразделения *users*, *groups*, *system* и *public*, а также
пользователя *authenticator*.

#+caption: *base.ldif*: создание суффикса, менеджера домена, организационных единиц, учетной записи *authenticator* и настроек *passwordDefaults*
#+name: base-ldif
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/schema/base.ldif src ldif

** Формирование подразделения sudoers
:PROPERTIES:
:CUSTOM_ID: create-sudoers
:ID:       22a6415e-716f-4045-aab4-2535b7bdff12
:END:

Создадим подразделение *sudoers*, одну posix-группу *sudowheel* и
сконфигурируем *sudoers* так, чтобы разрешить выполнение *sudo* команд
без ввода пароля для членов этой группы (см. расп. [[sudo-ldif]]). Класс
*sudoRole* содержится в файле *sudo.schema*, подключенном в подразделе
[[#add-schemas]].

#+caption: *sudoers.ldif*: создание организационной единицы *sudoers*, добавление настроек по умолчанию для *sudo* и группы *sudowheel*, включенной в группу администраторов *sudo*
#+name: sudo-ldif
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/schema/sudoers.ldif src ldif

** Дополнительно. Возможности LDAP
:PROPERTIES:
:CUSTOM_ID: ldap-possibilities
:ID:       4f9ddacc-3908-4cd1-b091-3f00c31aa8a7
:END:

Возможности протокола LDAP значительно определяются схемами, которые
можно подключить с помощью директивы *include*. Помня об основной
цели, рассмотрим типичные задачи, которые можно решить с их помощью. В
первую очередь, нас интересуют уже готовые схемы, входящие в
дистрибутив *OpenLDAP* или разработанные сторонними поставщиками.

Примеры использования[fn::http://pro-ldap.ru/books/openldap-ubuntu-in-practice/index.html] OpenLDAP:
- Управление пользователями и группами в *OpenLDAP*
- Настройка аутентификации пользователей через *OpenLDAP* на клиенте
- Настройка *OpenLDAP* в качестве хранилища правил *sudo* (sudo.schema)
- *OpenLDAP* как хранилище карт автоматического монтирования для *autofs* (autofs.schema)
- Репозиторий *NFS netgroup* на основе *OpenLDAP* для *autofs* (nis.schema)

Расширенные возможности систем[fn::https://www.fusiondirectory.org/user_management/] на базе OpenLDAP:
- Управление пользователями
  - Управление квотами пользователей
  - Управление ssh ключами, сертификатами пользователей
  - Управление пользователями систем и сервисов
- Управление сервисами и системами
  - Управление сервисами почты, доступа к данным, мониторинга, имен,
    печати, резервного копирования, сети, прокси, репозиториев и Web
  - Управление системами: тонкие клиенты, десктопы, VDI, BYOD,
    серверы, VoIP, сетевые и мобильные устройства, узлы кластера

* Процесс добавления нового пользователя в систему
:PROPERTIES:
:CUSTOM_ID: new-user
:ID:       6fe3c37d-639a-4656-9675-bdc7a6c5ddb2
:END:

#+begin_quote
Необходимо разработать документацию по процессу добавления нового
пользователя в систему, использующего аутентификацию посредством
LDAP. Предложить CLI (или GUI WEB) интерфейс для выполнения данной
операции. Ориентироваться на использование в ОС *CentOS 5/6*.

Предложить LDAP-варианты для команд *passwd*, *useradd*, *usermod*,
*finger*, *chsh*, *chfn* и функциональности *.forward*.
#+end_quote

** Добавление пользователя с помощью CLI интерфейса
:PROPERTIES:
:CUSTOM_ID: new-user-ldap
:ID:       6e8437bc-7e1f-489a-9afb-44f3d67d49ab
:END:
#+begin_verse
Где работаем: контейнеры *server-.....*
#+end_verse

Используем утилиту *ldapadd* для добавления записи пользователя в формате *ldif*

#+name: add-user
#+begin_src sh :exports none
ldapadd -x -D 'cn=Manager,dc=mercury,dc=febras,dc=net' -w $LDAP_MANAGER_PASSWORD -f user.ldif

#+end_src
#+begin_src sh :exports code :noweb yes
<<add-user>>
#+end_src

#+caption: *user.ldif*: создание нового пользователя, принадлежащего к группе *sudowheel*
#+INCLUDE: "../schema/user.ldif" src ldif

Полученные (см. подраздел [[#add-users]]) в результате миграции учетные
записи пользователей кластера добавляются аналогично. Необходимая
функциональность учетной записи пользователя определяется классами
*posixAccount* и *shadowAccount*.

** Добавление пользователя с помощью GUI Web интерфейса
:PROPERTIES:
:CUSTOM_ID: new-user-php
:ID:       6de9e6dc-04f2-429d-b22e-55caa2e270ee
:END:
#+begin_verse
Где работаем: контейнер *gui*
#+end_verse

Как мы видели, добавление записи в БД LDAP с помощью *ldif*-файла
сопровождается некоторым дублированием информации и мелкими
неудобствами. Например, приходится дублировать часть уникального имени
*dn*, хотя при использовании более развитых средств, эта часть могла
быть получена из контекста автоматически. С другой стороны, такая
форма записи "говорит сама за себя": уникальное имя полностью
определяет место объекта в БД, являясь одновременно как описательной
(по аналогии с *SQL Data Definition Language*) --- при использовании
*ldapsearch*, так и модфицирующей (*SQL Data Manipulation Language*)
конструкцией --- в случае использования утилит *ldapadd/slapadd* или
*ldapmodify/slapmodify*.

Далее, приходится дублировать одинаковые для всех записей пользователя
поля *objectClass*, но с этим вполне можно смириться, поскольку обычно
используется готовый шаблон *ldif*-файла и уже в него вносятся
изменения. Чуть большее неудобство таит в себе поле *gidNumber*,
поскольку приходится узнавать и прописывать номер группы. Впрочем, при
небольшом количестве групп, а тем более при наличии одной группы, это
не является проблемой. В нашем случае используется группа, номер
*gidNumber* которой обычно совпадает с номером *uidNumber*
пользователя, как это принято в Unix.

В случае гибкой работы с настройками *shadow* полей, такой текстовый
интерфейс начнет приносить ощутимые проблемы, т.к., например, для
полей *shadowLastChange* и *shadowMax* необходимо вычислять количество
дней --- а это уже явно требует автоматизации.

Поле *userPassword* также требует аккуратного обращения: необходимо
каким то образом применять шифрование пароля с помощью утилит
*ldappasswd* или *slappasswd*.

Эти и другие проблемы может решить GUI интерфейс, который позволяет
с помощью доступных шаблонов и средств описания GUI, реализовывать
нужную функциональность, в некоторых случаях значительно облегчая
работу со схемой каталога LDAP.
#+begin_html
<div align="right">
<a onclick="toggleDiv2('shadow',$(this));" class="fa fa-caret-right">Файлы custom-*.xml</a>
</div>
#+end_html
#+HTML: <div id="shadow" style="display:none">
#+caption: xml-файл шаблона *User Account With Shadow* браузера схемы
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/misc/custom-ShadowAccount.xml src xml :exports (when (eq org-export-current-backend 'odt) "none")
#+caption: xml-файл шаблона *Posix Group* браузера схемы
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/misc/custom-posixGroup.xml src xml :exports (when (eq org-export-current-backend 'odt) "none")
#+HTML: </div>

#+NAME: fig:php01
#+caption: Создание пользователя и его группы с использованием шаблона phpLDAPadmin
[[./php01.png]]

** Тестирование клиентского подключения
:PROPERTIES:
:CUSTOM_ID: test-client
:ID:       061371a3-a5d6-4fa2-9e15-2d8adef5caf0
:END:
#+begin_verse
Где работаем: контейнеры *client.*
#+end_verse

Для проверки возможности аутентификации будем использовать запись
 *username* (см. подраздел [[#new-user-ldap]]). Протестируем подключение с
помощью команды
#+begin_src sh
getent passwd username
#+end_src
которая выводит passwd данные пользователя *username* из доступных
источников, в данном случае задействован сервер LDAP
#+begin_src conf-colon
username:x:1050:1050:User Name:/home/username:/bin/bash
#+end_src

#+begin_verse
Где работаем: локальная сеть контейнеров
#+end_verse

Убедимся, что механизм *sudoers* задействован. Вывод команды
#+begin_src sh
sshpass -p p@ssw0rd ssh -t username@$(ip) sudo ls /root
#+end_src
демонстрирует, что пользователь *username* успешно прочитал содержимое
директории *root* с помощью *sudo*
#+begin_src raw
Dockerfile5  Dockerfile6  run5.sh  run6.sh
#+end_src

** schema.sh 							   :noexport:
:PROPERTIES:
:CUSTOM_ID: schema.sh
:ID:       c5558d04-3427-49cf-925c-1966032e7e85
:END:
#+name: schemash-prefix
#+begin_src sh :exports none

function password() {
    ldappasswd -h $1 -x -D "uid=username,ou=users,dc=mercury,dc=febras,dc=net" -w p@ssw0rd -s new_p@ssw0rd "uid=username,ou=users,dc=mercury,dc=febras,dc=net"
    ldappasswd -h $1 -x -D "uid=username,ou=users,dc=mercury,dc=febras,dc=net" -w new_p@ssw0rd -s p@ssw0rd "uid=username,ou=users,dc=mercury,dc=febras,dc=net"
    ldapsearch -x -h $1 -LLL -D 'cn=Manager,dc=mercury,dc=febras,dc=net' -b 'uid=username,ou=users,dc=mercury,dc=febras,dc=net' '(shadowLastChange=*)' -w manager | grep shadowLastChange
}

function password_out() {
cat <<EOF
shadowLastChange: 17093
EOF
}

#+end_src
#+name: modify-sh
#+begin_src sh :exports none
function modify() {
    ldapmodify -h $1 -x -D "cn=Manager,dc=mercury,dc=febras,dc=net" -w manager <<EOF
dn: uid=username,ou=users,dc=mercury,dc=febras,dc=net
changetype: modify
replace: loginShell
loginShell: /bin/sh
-
EOF
    ldapsearch -x -h $1 -LLL -D 'cn=Manager,dc=mercury,dc=febras,dc=net' -b 'uid=username,ou=users,dc=mercury,dc=febras,dc=net' '(loginShell=*)' -w manager | grep loginShell
}

function modify_out() {
cat <<EOF
modifying entry "uid=username,ou=users,dc=mercury,dc=febras,dc=net"

loginShell: /bin/sh
EOF
}
#+end_src
#+name: schemash-postfix
#+begin_src sh :exports none

function ssh() {
    sshpass -p p@ssw0rd ssh -o "GSSAPIAuthentication no" -o "UserKnownHostsFile /dev/null" -o StrictHostKeyChecking=no -o "VerifyHostKeyDNS no" -t username@$2 sudo ls /root/Dockerfile5 2> /dev/null || true
}

function ssh_out() {
cat <<EOF
/root/Dockerfile5
EOF
}

function struct() {
    ldapsearch -x -h $1 -LLL -D 'cn=Manager,cn=config' -b 'cn=subschema' -s base + -w root | grep -o structuralObjectClass
}

function struct_out() {
cat <<EOF
structuralObjectClass
structuralObjectClass
EOF
}

function structuralObjectClass() {
    ldapsearch -x -h $1 -LLL -D 'cn=Manager,dc=mercury,dc=febras,dc=net' -b 'dc=mercury,dc=febras,dc=net' '(uid=username)' structuralObjectClass -w manager
}

function structuralObjectClass_out() {
cat <<EOF
dn: uid=username,ou=users,dc=mercury,dc=febras,dc=net
structuralObjectClass: account

EOF
}

function anonymous() {
    ldapsearch -h $1 -LLL -x -b 'ou=public,dc=mercury,dc=febras,dc=net'
}

function anonymous_out() {
cat <<EOF
dn: ou=public,dc=mercury,dc=febras,dc=net
objectClass: organizationalUnit
ou: public

EOF
}

function denied() {
    docker exec $3 slapacl -b 'uid=username,ou=users,dc=mercury,dc=febras,dc=net' "gecos/read" 2>&1
}

function denied_out() {
cat <<EOF
read access to gecos: DENIED
EOF
}

function getent() {
    sshpass -p p@ssw0rd ssh -o "GSSAPIAuthentication no" -o "UserKnownHostsFile /dev/null" -o StrictHostKeyChecking=no -o "VerifyHostKeyDNS no" -t username@$2 sudo /usr/sbin/nscd -i passwd 2> /dev/null || true
    sshpass -p p@ssw0rd ssh -o "GSSAPIAuthentication no" -o "UserKnownHostsFile /dev/null" -o StrictHostKeyChecking=no -o "VerifyHostKeyDNS no" -t username@$2 sudo getent passwd username 2> /dev/null || true
    sshpass -p p@ssw0rd ssh -o "GSSAPIAuthentication no" -o "UserKnownHostsFile /dev/null" -o StrictHostKeyChecking=no -o "VerifyHostKeyDNS no" -t username@$2 sudo getent shadow username 2> /dev/null || true
}

function getent_out() {
cat <<EOF
username:x:1050:1050:User Name:/home/username:/bin/sh
EOF
    if [ "$3" == "cc-ldap-server7" ]; then
cat <<EOF
username:*:17093:0:99999:7:::0
EOF
    fi
    if [ "$3" == "cc-ldap-server6" ]; then
cat <<EOF
username:*:17093:0:99999:7:::0
EOF
    fi
    if [ "$3" == "cc-ldap-server5" ]; then
cat <<EOF
username:*:17093:0:99999:7:::
EOF
    fi
}

function homedir() {
    sshpass -p p@ssw0rd ssh -o "GSSAPIAuthentication no" -o "UserKnownHostsFile /dev/null" -o StrictHostKeyChecking=no -o "VerifyHostKeyDNS no" -t username@$2 ls /home 2> /dev/null || true
}

function homedir_out() {
cat <<EOF
username
EOF
}

function sendmail() {
    sleep 1
    grep forwarding gen/sendmail || true
}

function sendmail_out() {
cat <<EOF
forwarding test: it works!
EOF
}
#+end_src

#+begin_src sh :tangle ~/git/cc/cc-ldap-centos/schema/schema.sh :comments noweb :shebang "#!/bin/bash" :exports none :noweb yes
<<schemash-prefix>>
<<modify-sh>>
<<schemash-postfix>>
#+end_src

** Стандартные команды администрирования пользователей в случае использования LDAP
:PROPERTIES:
:CUSTOM_ID: standard-commands
:ID:       84d40fcf-c285-40e6-9f13-11685889a085
:END:

#+begin_verse
Где работаем: любой хост в локальной сети контейнеров с установленными утилитами openldap-client
#+end_verse

В подразделе [[#hdb-domain-config]]
устанавливаются разрешения для полей *userPassword* и
*shadowLastChange*, чтобы пользователь имел право на смену пароля.

#+begin_src sh :exports none :results code sh
sed -n "/^function password() {/,/^}/p" ../schema/schema.sh | sed '1d' | sed '$d' | sed '$d'
#+end_src

#+caption: Изменение пользователем своего пароля с помощью утилиты *ldappasswd*
#+BEGIN_SRC sh
    ldappasswd -h $1 -x -D "uid=username,ou=users,dc=mercury,dc=febras,dc=net" -w p@ssw0rd -s new_p@ssw0rd
#+END_SRC

#+begin_warning
При использовании утилиты *ldappasswd* изменения атрибута
*shadowLastChange* не происходит. Его необходимо задавать отдельно с
помощью утилиты *ldapmodify*. В случае применения утилиты *passwd*,
атрибут *shadowLastChange* корректно обновляется в LDAP (благодаря
действиям PAM) при наличии соответствующих прав доступа на запись.
#+end_warning

#+begin_src sh :exports results :results code sh
sed -n "/^function modify() {/,/^}/p" ../schema/schema.sh | sed '1d' | sed '$d'
#+end_src

#+caption: Изменение менеджером домена значения *loginShell* с помощью утилиты *ldapmodify*
#+RESULTS:
#+BEGIN_SRC sh
    ldapmodify -h $1 -x -D "cn=Manager,dc=mercury,dc=febras,dc=net" -w manager <<EOF
dn: uid=username,ou=users,dc=mercury,dc=febras,dc=net
changetype: modify
replace: loginShell
loginShell: /bin/sh
-
EOF
    ldapsearch -x -h $1 -LLL -D 'cn=Manager,dc=mercury,dc=febras,dc=net' -b 'uid=username,ou=users,dc=mercury,dc=febras,dc=net' '(loginShell=*)' -w manager | grep loginShell
#+END_SRC

Значение *loginShell: /bin/bash*, указанное в файле *user.ldif*, изменилось на */bin/sh*:

#+begin_src sh :exports results :results value pp
sed -n "/^function modify_out() {/,/^}/p" ../schema/schema.sh | sed '1d' | sed '$d' | sed '1d' | sed '$d'
#+end_src

#+RESULTS:
: modifying entry "uid=username,ou=users,dc=mercury,dc=febras,dc=net"
: 
: loginShell: /bin/sh

#+caption: Замещение стандартных команд в случае использования LDAP
| Утилита         | Работает с LDAP | Примечание                                                                    |
|-----------------+-----------------+-------------------------------------------------------------------------------|
| *passwd*        | *Да*            |                                                                               |
| *useradd*       | Нет             | *luseradd* или *ldapadd*, атрибуты классов *posixAccount*, *shadowAccount*    |
| *usermod*       | Нет             | *lusermod* или *ldapmodify*, атрибуты классов *posixAccount*, *shadowAccount* |
| *groupadd*      | Нет             | *lgroupadd* или *ldapadd*, атрибуты класса *posixGroup*                       |
| *groupmod*      | Нет             | *lgroupmod* или *ldapmodify*, атрибуты класса *posixGroup*                    |
| *finger*        | *Да*            |                                                                               |
| *chsh*          | Нет             | *ldapmodify*, атрибут *loginShell*                                            |
| *chfn*          | Нет             | *ldapmodify*, атрибут *gecos*                                                 |
| файл *.forward* | Нет             | атрибут *mailRoutingAddress* класса *inetLocalMailRecipient*                  |

#+begin_tip
Утилиты *luseradd*, *lusermod*, *lgroupadd* и *lgroupmod* принадлежат
библиотеке *libuser*, а утилиты *ldapadd* и *ldapmodify* содержатся в
пакете *openldap-clients*.
#+end_tip

#+begin_note
В файле */etc/nsswitch.conf* указывается порядок обращения к базам
данных (слева направо): *files* *ldap*. Если использовать команду
/passwd username/, вызываемую от имени суперпользователя, то поиск
пользователя *username* будет осуществляться сначала в базе *files* и,
если он там присутствует, произойдет смена пароля. До базы *ldap* в
этом случае поиск не дойдет, даже в случае наличия в ней пользователя
*username*. Однако, если войти в систему под учетной записью
*username*, используя пароль из базы *ldap*, и использовать команду
/passwd/ (т.е. смену пароля для текущего пользователя), то произойдет
смена пароля в базе *ldap*, а база *files* останется без изменений.
#+end_note

** Миграция пользователей и групп
:PROPERTIES:
:CUSTOM_ID: add-users
:ID:       3c998117-af2e-4965-94c7-3ebfb31d7691
:END:

#+caption: Миграция пользователей и групп для *5/2.3*
#+begin_src sh
LDAP_BASEDN=dc=mercury,dc=febras,dc=net
/usr/share/openldap/migration/migrate_passwd.pl /etc/passwd > /gen/mercury.ldif
/usr/share/openldap/migration/migrate_group.pl /etc/group >> /gen/mercury.ldif
sed -i "s|ou=People|ou=users|g" /gen/mercury.ldif
sed -i "s|ou=Group|ou=groups|g" /gen/mercury.ldif
#+end_src

#+caption: Миграция пользователей и групп для *6/2.4*
#+begin_src sh
LDAP_BASEDN=dc=mercury,dc=febras,dc=net
/usr/share/migrationtools/migrate_passwd.pl /etc/passwd > /gen/mercury.ldif
/usr/share/migrationtools/migrate_group.pl /etc/group >> /gen/mercury.ldif
sed -i "s|ou=People|ou=users|g" /gen/mercury.ldif
sed -i "s|ou=Group|ou=groups|g" /gen/mercury.ldif
#+end_src

#+begin_note
Файл */etc/shadow* считывается утилитой *migrate_passwd.pl* при
наличии прав доступа, класс *shadowAccount*, поля
*shadowLastChange* и т.п. будут добавлены.
#+end_note

#+caption: *mercury.ldif*: пример результата миграции пользователей и групп с помощью утилит *migrationtools*
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/mercury.ldif src ldif

#+begin_html
<a onclick="toggleDiv2('myContent-passwd',$(this));" class="fa fa-caret-right">passwd.ldif</a>
#+end_html

#+HTML: <div id="myContent-passwd" style="display:none">
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/passwd.ldif src ldif :exports (when (eq org-export-current-backend 'odt) "none")
#+HTML: </div>

# do not need migrate centos 6 users
# #+begin_html
# <br/><a onclick="toggleDiv2('myContent-passwd6',$(this));" class="fa fa-caret-right">passwd6.ldif</a>
# #+end_html

# #+HTML: <div id="myContent-passwd6" style="display:none">
# #+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/passwd6.ldif src ldif :exports (when (eq org-export-current-backend 'odt) "none")
# #+HTML: </div>

#+begin_html
<br/><a onclick="toggleDiv2('myContent-group',$(this));" class="fa fa-caret-right">group.ldif</a>
#+end_html

#+HTML: <div id="myContent-group" style="display:none">
#+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/group.ldif src ldif :exports (when (eq org-export-current-backend 'odt) "none")
#+HTML: </div>

# do not need migrate centos 6 users
# #+begin_html
# <br/><a onclick="toggleDiv2('myContent-group6',$(this));" class="fa fa-caret-right">group6.ldif</a>
# #+end_html

# #+HTML: <div id="myContent-group6" style="display:none">
# #+INCLUDE: /home/eab/git/cc/cc-ldap-centos/gen/group6.ldif src ldif :exports (when (eq org-export-current-backend 'odt) "none")
# #+HTML: </div>

* Перевести аутентификацию пользователей кластера на использование LDAP
:PROPERTIES:
:CUSTOM_ID: cluster
:ID:       db5bc4cf-74c3-40e0-b8b3-d57f3f32e338
:END:

